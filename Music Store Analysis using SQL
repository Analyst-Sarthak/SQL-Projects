#1 Who is senior most employee based on job Title?

    select first_name, last_name from employee
    order by levels desc
    Limit 1
    
#2 Which Country have the most Invoices?

    select billing_country, count(*) from invoice
    group by billing_country
    order by count desc
    limit 1
    
#3 What are top 3 values of total Invoice?

    select invoice_id, total from Invoice
    order by total desc
    limit 3
    
#4 Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals.

    select billing_city, sum(total) as total_sum from Invoice
    group by billing_city
    order by total_sum desc
    limit 1
    
#5 Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.

    select c.first_name, c.last_name, c.customer_id, sum(i.total) as total from customer as c
    join invoice as i
    ON c.customer_id = i.customer_id
    group by c.customer_id
    order by total desc
    limit 1
    
#6 Write a query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A.

    select distinct c.email, c.first_name, c.last_name from customer as c
    JOIN invoice as i on c.customer_id = i.customer_id
    Join invoice_line as il ON il.invoice_id = i.invoice_id
    where track_id IN(
        select track_id from track
        join genre on genre.genre_id = track.genre_id
        where genre.name Like 'Rock'
    )
    order by email
    
#7 Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands.

    select artist.name, count(artist.artist_id) as Total_song from artist
    join album on artist.artist_id = album.artist_id
    join track on track.album_id = album.album_id
    join genre on genre.genre_id = track.genre_id
    where genre.name like 'Rock'
    group by artist.artist_id
    order by total_song desc
    Limit 10
    
#8 Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first.

    select name, milliseconds from track
    where milliseconds> (
        select avg(milliseconds) as avg_length from track
    )
    order by milliseconds desc
    
#9 Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent.

      with best_earning as (
       select artist.artist_id artist_id, artist.name artist_name, sum(invoice_line.unit_price * invoice_line.quantity) as top_earner
       from artist 
        join album on album.artist_id = artist.artist_id
        join track on track.album_id = album.album_id
        join invoice_line on invoice_line.track_id = track.track_id
        Group by 1
        order by 3 desc
        Limit 1
    )

    select customer.first_name, best.artist_name, sum(invoice_line.unit_price * invoice_line.quantity) as top_spent
       from customer
       join invoice on invoice.customer_id = customer.customer_id
       join invoice_line on invoice_line.invoice_id = invoice.invoice_id
       join track on track.track_id = invoice_line.track_id
       join album on album.album_id = track.album_id
       join best_earning best on best.artist_id = album.artist_id
       Group by 1,2
       order by 3 desc
       limit 5
       
#10 We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
the maximum number of purchases is shared return all Genres.

    with most_popular as(
    select invoice.billing_country as country, genre.name as genre_name, genre.genre_id as genre_id, count(invoice_line.quantity) as total_sale, 
        ROW_NUMBER() OVER(PARTITION BY invoice.billing_country ORDER BY COUNT(invoice_line.quantity) DESC) AS RowNo 
        from invoice
        join invoice_line on invoice_line.invoice_id = invoice.invoice_id
        join track on track.track_id = invoice_line.track_id
        join genre on genre.genre_id = track.genre_id
        group by 1,2,3
        order by 1 asc, 4 desc
    )

    select* from most_popular
    where RowNo = 1

    Note:- For countries where the maximum number of purchases is shared, we can use rank() function instead of Row_Number(). so that all genres can be obtained.
    
#11 Write a query that determines the customer that has spent the most on music for each country. 
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount

    with top_customer as (
        select customer.country as country, customer.first_name as Name, sum(invoice.total) as total_spent, 
        RANK() OVER(PARTITION BY customer.country ORDER BY sum(invoice.total) DESC) AS RankNo 
        from customer
        join invoice on invoice.customer_id = customer.customer_id
        group by 1,2
        order by 1 asc, 3 desc

    )
    select * from top_customer
    where RankNo=1
